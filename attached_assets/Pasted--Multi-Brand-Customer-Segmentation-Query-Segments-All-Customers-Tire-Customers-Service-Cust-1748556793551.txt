-- Multi-Brand Customer Segmentation Query
-- Segments: All Customers, Tire Customers, Service Customers, Lapsed Customers, Non-Customers, Repeat Customers
-- Brands: BBTS, ATD, TW

WITH CustomerBase AS (
    SELECT DISTINCT
        c.CustomerNumber,
        c.FirstName,
        c.LastName,
        c.ContactGUID,
        ih.CustomerEmail,
        ih.CustomerPhoneNumber,
        ih.CustomerZipCode,
        ih.CustomerState AS StateCode,
        COALESCE(sb.Name, 'default') AS BrandId,
        ih.InvoicedDate,
        ii.PartTypeId,
        id.PartNumber,
        -- Tire customer flag (PartTypeId = 13688 for tire purchases)
        CASE WHEN ii.PartTypeId = 13688 THEN 1 ELSE 0 END AS IsTirePurchase,
        -- Service customer flag (LAB prefix OR non-tire parts)
        CASE WHEN LEFT(id.PartNumber, 3) = 'LAB' OR (ii.PartTypeId IS NOT NULL AND ii.PartTypeId != 13688) THEN 1 ELSE 0 END AS IsServicePurchase
    FROM
        dbo.Customer AS c
    INNER JOIN
        dbo.InvoiceHeader AS ih ON c.Id = ih.CustomerId
    INNER JOIN
        dbo.InvoiceDetail AS id ON ih.Id = id.InvoiceHeaderId
    LEFT JOIN
        dbo.Store AS s ON ih.StoreId = s.Id
    LEFT JOIN
        dbo.StoreBrand AS sb ON s.StoreBrandId = sb.Id
    LEFT JOIN
        dbo.InventoryItem AS ii ON id.ItemId = ii.ItemId
    WHERE 
        COALESCE(sb.Name, 'default') IN ('Big Brand Tire', 'American Tire Depot', 'Tire World', 'Robertson Tire', 'Tires To You') -- Filter for all brands
),

CustomerSegments AS (
    SELECT 
        CustomerNumber,
        FirstName,
        LastName,
        ContactGUID,
        CustomerEmail,
        CustomerPhoneNumber,
        CustomerZipCode,
        StateCode,
        BrandId,
        -- Customer type flags
        MAX(IsTirePurchase) AS IsTireCustomer,
        MAX(IsServicePurchase) AS IsServiceCustomer,
        -- Recency analysis
        MAX(InvoicedDate) AS LastPurchaseDate,
        COUNT(DISTINCT InvoicedDate) AS TotalVisits,
        DATEDIFF(MONTH, MAX(InvoicedDate), GETDATE()) AS MonthsSinceLastPurchase,
        -- Repeat customer flag (more than 1 visit)
        CASE WHEN COUNT(DISTINCT InvoicedDate) > 1 THEN 1 ELSE 0 END AS IsRepeatCustomer,
        -- Lapsed customer flag (15+ months since last purchase)
        CASE WHEN DATEDIFF(MONTH, MAX(InvoicedDate), GETDATE()) >= 15 THEN 1 ELSE 0 END AS IsLapsedCustomer
    FROM CustomerBase
    GROUP BY 
        CustomerNumber, FirstName, LastName, ContactGUID, 
        CustomerEmail, CustomerPhoneNumber, CustomerZipCode, StateCode, BrandId
),

-- Email subscribers who are not customers (Mailchimp subscribers with no customer ID)
NonCustomers AS (
    SELECT DISTINCT
        mc.Email AS CustomerEmail,
        mc.FirstName,
        mc.LastName,
        'Non-Customer' AS CustomerNumber,
        NULL AS ContactGUID,
        NULL AS CustomerPhoneNumber,  -- Phone not available in MailChimp table
        NULL AS CustomerZipCode,      -- ZipCode not available in MailChimp table
        NULL AS StateCode,            -- State not available in MailChimp table
        COALESCE(mc.PreferredBrand, 'default') AS BrandId,
        0 AS IsTireCustomer,
        0 AS IsServiceCustomer,
        NULL AS LastPurchaseDate,
        0 AS TotalVisits,
        NULL AS MonthsSinceLastPurchase,
        0 AS IsRepeatCustomer,
        0 AS IsLapsedCustomer,
        1 AS IsNonCustomer
    FROM dbo.MailChimp mc
    WHERE mc.MC_Status = 'subscribed' 
      AND (mc.VenomCustomerId = 0 OR mc.VenomCustomerId IS NULL)
      AND mc.PreferredBrand IN ('Big Brand Tire', 'American Tire Depot', 'Tire World', 'Robertson Tire', 'Tires To You')
)

-- Final segmented results
SELECT 
    cs.BrandId,
    cs.CustomerNumber,
    cs.FirstName,
    cs.LastName,
    cs.ContactGUID,
    cs.CustomerEmail,
    cs.CustomerPhoneNumber,
    cs.CustomerZipCode,
    cs.StateCode,
    cs.LastPurchaseDate,
    cs.TotalVisits,
    cs.MonthsSinceLastPurchase,
    
    -- Segment Classifications
    0 AS IsNonCustomer,  -- This will be 1 for non-customers in the UNION section
    cs.IsTireCustomer,
    cs.IsServiceCustomer,
    cs.IsRepeatCustomer,
    cs.IsLapsedCustomer,
    
    -- Segment Labels for easier filtering
    CASE 
        WHEN cs.IsLapsedCustomer = 1 THEN 'Lapsed Customer'
        WHEN cs.IsTireCustomer = 1 AND cs.IsServiceCustomer = 1 THEN 'Tire & Service Customer'
        WHEN cs.IsTireCustomer = 1 THEN 'Tire Customer Only'
        WHEN cs.IsServiceCustomer = 1 THEN 'Service Customer Only'
        ELSE 'General Customer'
    END AS PrimarySegment,
    
    -- Additional segment tags (simplified)
    CASE 
        WHEN cs.IsTireCustomer = 1 AND cs.IsServiceCustomer = 1 AND cs.IsRepeatCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Tire, Service, Repeat, Lapsed'
        WHEN cs.IsTireCustomer = 1 AND cs.IsServiceCustomer = 1 AND cs.IsRepeatCustomer = 1 THEN 'Tire, Service, Repeat'
        WHEN cs.IsTireCustomer = 1 AND cs.IsServiceCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Tire, Service, Lapsed'
        WHEN cs.IsTireCustomer = 1 AND cs.IsServiceCustomer = 1 THEN 'Tire, Service'
        WHEN cs.IsTireCustomer = 1 AND cs.IsRepeatCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Tire, Repeat, Lapsed'
        WHEN cs.IsTireCustomer = 1 AND cs.IsRepeatCustomer = 1 THEN 'Tire, Repeat'
        WHEN cs.IsTireCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Tire, Lapsed'
        WHEN cs.IsTireCustomer = 1 THEN 'Tire'
        WHEN cs.IsServiceCustomer = 1 AND cs.IsRepeatCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Service, Repeat, Lapsed'
        WHEN cs.IsServiceCustomer = 1 AND cs.IsRepeatCustomer = 1 THEN 'Service, Repeat'
        WHEN cs.IsServiceCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Service, Lapsed'
        WHEN cs.IsServiceCustomer = 1 THEN 'Service'
        WHEN cs.IsRepeatCustomer = 1 AND cs.IsLapsedCustomer = 1 THEN 'Repeat, Lapsed'
        WHEN cs.IsRepeatCustomer = 1 THEN 'Repeat'
        WHEN cs.IsLapsedCustomer = 1 THEN 'Lapsed'
        ELSE 'General'
    END AS AllSegments

FROM CustomerSegments cs

UNION ALL

-- Add non-customers to the result set
SELECT 
    nc.BrandId,
    nc.CustomerNumber,
    nc.FirstName,
    nc.LastName,
    nc.ContactGUID,
    nc.CustomerEmail,
    nc.CustomerPhoneNumber,
    nc.CustomerZipCode,
    nc.StateCode,
    nc.LastPurchaseDate,
    nc.TotalVisits,
    nc.MonthsSinceLastPurchase,
    nc.IsNonCustomer,
    nc.IsTireCustomer,
    nc.IsServiceCustomer,
    nc.IsRepeatCustomer,
    nc.IsLapsedCustomer,
    'Non-Customer' AS PrimarySegment,
    'Non-Customer' AS AllSegments
FROM NonCustomers nc

ORDER BY BrandId, PrimarySegment, LastName, FirstName;

-- BONUS: Summary counts by brand and segment
-- Uncomment the section below to get segment counts

/*
SELECT 
    BrandId,
    SUM(CASE WHEN IsNonCustomer = 0 THEN 1 ELSE 0 END) AS TotalCustomers,
    SUM(IsTireCustomer) AS TireCustomers,
    SUM(IsServiceCustomer) AS ServiceCustomers,
    SUM(CASE WHEN IsTireCustomer = 1 AND IsServiceCustomer = 1 THEN 1 ELSE 0 END) AS TireAndServiceCustomers,
    SUM(IsRepeatCustomer) AS RepeatCustomers,
    SUM(IsLapsedCustomer) AS LapsedCustomers,
    SUM(CASE WHEN IsNonCustomer = 1 THEN 1 ELSE 0 END) AS NonCustomers
FROM (
    [INSERT THE MAIN QUERY ABOVE HERE]
) AS SegmentSummary
GROUP BY BrandId
ORDER BY BrandId;
*/